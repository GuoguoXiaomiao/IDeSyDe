---
name: "Release nightly out of the develop branch"

on: workflow_dispatch
jobs:
  publish-java-build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "nightly"
        prerelease: true
        title: "Nightly development Build"
    - name: Set up JDK
      uses: olafurpg/setup-scala@v11
      with:
        java-version: "graalvm-ce-java11@21.1.0"
    - uses: ./.github/actions/millw@v1
      with:
        command: cli.assembly
    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ${{ github.workspace }}/out/cli/assembly.dest/out.jar
        asset_name: idesyde-nightly-standalone.jar
        tag: "nightly"
        overwrite: true
        body: "Executable IDeSyDe standalone jar"
# jobs:

  # publish-cross-jar:
  #   needs: make-tag
  #   strategy:
  #     matrix:
  #       python: [3.7, 3.8, 3.9]
  #       poetry: [1.1.5]
  #       rust: [1.49.0]
  #       pyoxidizer: [0.11.0]
  #   runs-on: ubuntu-18.04
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Set up Python ${{ matrix.python }}
  #     uses: actions/setup-python@v2
  #     with:
  #       python-version: ${{ matrix.python }}
  #   - name: Set up pip properly
  #     run: python -m pip install --upgrade pip
  #   - uses: abatilo/actions-poetry@v2.1.0
  #     with:
  #       poetry-version: ${{ matrix.poetry }}
  #   - name: Make shiv from poetry file
  #     run: |
  #       cd ${{ github.workspace }}
  #       poetry update
  #       poetry install
  #       mkdir -p dist
  #       poetry run shiv --site-packages=$(find $(poetry env info -p) -name "site-packages") --upgrade -o dist/idesyde.pyz -c idesyde idesyde
  #   - name: Upload binaries to release
  #     uses: svenstaro/upload-release-action@v2
  #     with:
  #       repo_token: ${{ secrets.GITHUB_TOKEN }}
  #       file: ${{ github.workspace }}/dist/idesyde.pyz
  #       asset_name: IDeSyDe-nightly-x86_64-linux-gnu-py${{ matrix.python }}.pyz
  #       tag: "nightly"
  #       overwrite: true
  #       body: "Java jar"
  # publish-linux-bin:
  #   needs: make-tag
  #   env:
  #     PYTHON_VERSION: 3.8
  #     POETRY_VERSION: 1.1.5
  #     RUST_VERSION: 1.49.0
  #     PYOXIDIZER_VERSION: 0.11.0
  #   runs-on: ubuntu-18.04
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Set up Python ${{ env.PYTHON_VERSION }}
  #     uses: actions/setup-python@v2
  #     with:
  #       python-version: ${{ env.PYTHON_VERSION }}
  #   - name: Set up pip properly
  #     run: python -m pip install --upgrade pip
  #   - uses: abatilo/actions-poetry@v2.1.0
  #     with:
  #       poetry-version: ${{ env.POETRY_VERSION }}
  #   - name: Setup Rust
  #     uses: ATiltedTree/setup-rust@v1.0.4
  #     with:
  #       rust-version: ${{ env.RUST_VERSION }}
  #   - name: Install PyOxidizer
  #     run: cargo install --version ${{ env.PYOXIDIZER_VERSION }} pyoxidizer
  #   - name: Run PyOxidizer
  #     run: |
  #       cd ${{ github.workspace }}
  #       pyoxidizer build --release
  #   - name: Zip IDeSyDe
  #     run: |
  #       sudo apt-get install -y unzip
  #       cd ${{ github.workspace }}/build/x86_64-unknown-linux-gnu/release/install
  #       zip -r idesyde-x86_64-unknown-linux-gnu.zip idesyde
  #   - name: Upload binaries to release
  #     uses: svenstaro/upload-release-action@v2
  #     with:
  #       repo_token: ${{ secrets.GITHUB_TOKEN }}
  #       file: ${{ github.workspace }}/build/x86_64-unknown-linux-gnu/release/install/idesyde-x86_64-unknown-linux-gnu.zip
  #       asset_name: IDeSyDe-nightly-x86_64-unknown-linux-gnu.zip
  #       tag: "nightly"
  #       overwrite: true
  #       body: "Executable zip with Libs for x86_64 linux distros"
  # publish-windows-pyz:
  #   needs: make-tag
  #   strategy:
  #     matrix:
  #       python: [3.7, 3.8, 3.9]
  #       poetry: [1.1.5]
  #       rust: [1.49.0]
  #       pyoxidizer: [0.11.0]
  #   runs-on: windows-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Set up Python ${{ matrix.python }}
  #     uses: actions/setup-python@v2
  #     with:
  #       python-version: ${{ matrix.python }}
  #   - name: Set up pip properly
  #     run: python -m pip install --upgrade pip
  #   - uses: abatilo/actions-poetry@v2.1.0
  #     with:
  #       poetry-version: ${{ matrix.poetry }}
  #   - name: Make shiv from poetry file
  #     run: |
  #       cd ${{ github.workspace }}
  #       poetry update
  #       poetry install
  #       mkdir -p dist
  #       poetry run shiv -o dist\idesyde.pyz -c idesyde idesyde
  #   - name: Upload binaries to release
  #     uses: svenstaro/upload-release-action@v2
  #     with:
  #       repo_token: ${{ secrets.GITHUB_TOKEN }}
  #       file: ${{ github.workspace }}\dist\idesyde.pyz
  #       asset_name: IDeSyDe-nightly-x86_64-windows-msvc-py${{ matrix.python }}.pyz
  #       tag: "nightly"
  #       overwrite: true
  #       body: "Python zip with Libs for x86_64 windows" 
  # publish-windows-bin:
  #   needs: make-tag
  #   env:
  #     PYTHON_VERSION: 3.9
  #     POETRY_VERSION: 1.1.5
  #     RUST_VERSION: 1.49.0
  #     PYOXIDIZER_VERSION: 0.11.0
  #   runs-on: windows-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Set up Python ${{ env.PYTHON_VERSION }}
  #     uses: actions/setup-python@v2
  #     with:
  #       python-version: ${{ env.PYTHON_VERSION }}
  #   - name: Set up pip properly
  #     run: python -m pip install --upgrade pip
  #   - uses: abatilo/actions-poetry@v2.1.0
  #     with:
  #       poetry-version: ${{ env.POETRY_VERSION }}
  #   - name: Setup Rust
  #     uses: ATiltedTree/setup-rust@v1.0.4
  #     with:
  #       rust-version: ${{ env.RUST_VERSION }}
  #   - name: Install PyOxidizer
  #     run: cargo install --version ${{ env.PYOXIDIZER_VERSION }} pyoxidizer
  #   - name: Run PyOxidizer
  #     run: |
  #       cd ${{ github.workspace }}
  #       pyoxidizer build --release
  #   - name: Zip IDeSyDe
  #     run: |
  #       cd ${{ github.workspace }}\build\x86_64-pc-windows-msvc\release\install
  #       Compress-Archive -path '.\idesyde' -destinationpath '.\idesyde-x86_64-pc-windows-msvc.zip' 
  #   - name: Upload binaries to release
  #     uses: svenstaro/upload-release-action@v2
  #     with:
  #       repo_token: ${{ secrets.GITHUB_TOKEN }}
  #       file: ${{ github.workspace }}\build\x86_64-pc-windows-msvc\release\install\idesyde-x86_64-pc-windows-msvc.zip
  #       asset_name: IDeSyDe-x86_64-pc-windows-msvc.zip
  #       tag: "nightly"
  #       overwrite: true
  #       body: "Zip with Libs for x86_64 Windows"
  # publish-apple-pyz:
  #   needs: make-tag
  #   strategy:
  #     matrix:
  #       python: [3.7, 3.8, 3.9]
  #       poetry: [1.1.5]
  #       rust: [1.49.0]
  #       pyoxidizer: [0.11.0]
  #   runs-on: macos-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Set up Python ${{ matrix.python }}
  #     uses: actions/setup-python@v2
  #     with:
  #       python-version: ${{ matrix.python }}
  #   - name: Set up pip properly
  #     run: python -m pip install --upgrade pip
  #   - uses: abatilo/actions-poetry@v2.1.0
  #     with:
  #       poetry-version: ${{ matrix.poetry }}
  #   - name: Regen Setup.py from poetry file
  #     run: |
  #       cd ${{ github.workspace }}
  #       poetry update
  #       poetry install
  #       mkdir -p dist
  #       poetry run shiv --site-packages=$(find $(poetry env info -p) -name "site-packages") --upgrade -o dist/idesyde.pyz -c idesyde idesyde
  #   - name: Upload binaries to release
  #     uses: svenstaro/upload-release-action@v2
  #     with:
  #       repo_token: ${{ secrets.GITHUB_TOKEN }}
  #       file: ${{ github.workspace }}/dist/idesyde.pyz
  #       asset_name: IDeSyDe-nightly-x86_64-apple-darwin-py${{ matrix.python }}.pyz
  #       tag: "nightly"
  #       overwrite: true
  #       body: "Python zip for x86_64 MacOS"
  # publish-apple-bin:
  #   needs: make-tag
  #   env:
  #     PYTHON_VERSION: 3.9
  #     POETRY_VERSION: 1.1.5
  #     RUST_VERSION: 1.49.0
  #     PYOXIDIZER_VERSION: 0.11.0
  #   runs-on: macos-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Set up Python ${{ env.PYTHON_VERSION }}
  #     uses: actions/setup-python@v2
  #     with:
  #       python-version: ${{ env.PYTHON_VERSION }}
  #   - name: Set up pip properly
  #     run: python -m pip install --upgrade pip
  #   - uses: abatilo/actions-poetry@v2.1.0
  #     with:
  #       poetry-version: ${{ env.POETRY_VERSION }}
  #   - name: Setup Rust
  #     uses: ATiltedTree/setup-rust@v1.0.4
  #     with:
  #       rust-version: ${{ env.RUST_VERSION }}
  #   - name: Install PyOxidizer
  #     run: cargo install --version ${{ env.PYOXIDIZER_VERSION }} pyoxidizer
  #   - name: Regen Setup.py from poetry file
  #     run: |
  #       cd ${{ github.workspace }}
  #       poetry update
  #       poetry export -o requirements.txt
  #   - name: Run PyOxidizer
  #     run: |
  #       cd ${{ github.workspace }}
  #       pyoxidizer build --release
  #   - name: Zip IDeSyDe
  #     run: |
  #       cd ${{ github.workspace }}/build/x86_64-apple-darwin/release/install
  #       zip -r idesyde-x86_64-apple-darwin.zip idesyde 
  #   - name: Upload binaries to release
  #     uses: svenstaro/upload-release-action@v2
  #     with:
  #       repo_token: ${{ secrets.GITHUB_TOKEN }}
  #       file: ${{ github.workspace }}/build/x86_64-apple-darwin/release/install/idesyde-x86_64-apple-darwin.zip
  #       asset_name: IDeSyDe-nightly-x86_64-apple-darwin.zip
  #       tag: "nightly"
  #       overwrite: true
  #       body: "Zip with Libs for x86_64 MacOS"
