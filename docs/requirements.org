#+STARTUP: content
#+TITLE: Requirements for the next version of the DeSyDe tool 
#+AUTHOR: Rodolfo Jordao, Ingo Sander
#+HTML_HEAD: <link rel="stylesheet" href="style.css" type="text/css" />
#+EMAIL: jordao@kth.se, ingo@kth.se
#+TAGS: noexport

* Brainstorming

** What problems shall the tool solve?

*** Design Problems
1. Find a 'mapping' for a given set applications, platforms and constraints 
2. Identify the right platform and the 'mapping' for a given set of applications and constraints

*** Problem Formulation
**** Applications
 1. SDF-Graphs
 2. Periodic task graphs
 3. SADF-Graphs

**** Platforms
 1. Shared Memory Multiprocessor
	 - TDMA-Bus
 2. Network-on-Chip Multiprocessor
	 - TDN-NoC
 3. Avionics Platform based Integrated Modular Avionics
 4. Automotive Platform (AUTOSAR?)
 5. Reconfigurable Platforms

**** Design Constraints
 1. Real-time
 2. Virtualization
 3. Power
 4. Memory Footprint
 5. Cost

** How shall the tool be implemented?

*** Modularity
1. The tool needs to be modular in the sense that it can use different application and platform models, and design constraints

*** Options

1. Continue with the existing DeSyDe model
	- PROs
	  - Tool exists and works
	- CONs
	  - Lack of documentation
	  - Developed in an organic way
	  - Difficult to maintain
2. Start with a new model using Constraint Programming with Minizinc
	- PROs
	  - Build on existing competence in CP
	  - High-level and formal specification of the problem
	  - Can be connected to different solvers
	- CONs
	  - Will require effort and time
3. Use different approaches to solve the problem
	- Metaheuristics
	- Dynamic Programming
4. Combination of several approaches

** Ideas for a work plan

1. Define a simpler but relevant problem and model it in Minizinc
2. Get a full understanding of the problem, the model and different solution techniques
3. Extend the model


