knode vForSyDe_Model {
   klabel "ForSyDe Model"
   // for tile_router29
   knode vtile_router29 {
      klabel "tile_router29"
      kport from_4_4 {
         klabel "from_4_4"
      }
      kport from_3_5 {
         klabel "from_3_5"
      }
      kport ni {
         klabel "ni"
      }
      kport to_4_4 {
         klabel "to_4_4"
      }
      kport to_3_5 {
         klabel "to_3_5"
      }
      // translation from long to short hierarchy - horizontal
      kedge ( :to_3_5 -> vtile_router28:from_4_5)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_4_4 -> vtile_router24:from_4_5)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_4_4 -> vtile_router24)
      // translation from long to short hierarchy - horizontal
      kedge ( :ni -> vtile_29:router)
   }
   // for tile_router25
   knode vtile_router25 {
      klabel "tile_router25"
      kport from_0_4 {
         klabel "from_0_4"
      }
      kport from_1_5 {
         klabel "from_1_5"
      }
      kport to_1_5 {
         klabel "to_1_5"
      }
      kport ni {
         klabel "ni"
      }
      kport to_0_4 {
         klabel "to_0_4"
      }
      // translation from long to short hierarchy - horizontal
      kedge ( :to_1_5 -> vtile_router26:from_0_5)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_0_4 -> vtile_router20:from_0_5)
      // translation from long to short hierarchy - horizontal
      kedge ( :ni -> vtile_25:router)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_0_4 -> vtile_router20)
   }
   // for tile_26
   knode vtile_26 {
      klabel "tile_26"
      // for tile_ni26
      knode vtile_ni26 {
         klabel "tile_ni26"
         kport router {
            klabel "router"
         }
         kport tileProcessor {
            klabel "tileProcessor"
         }
         kport tileMemory {
            klabel "tileMemory"
         }
         // translation from long to short hierarchy - upwards
         kedge ( :router -> vtile_26:router)
         // translation from long to short hierarchy - horizontal
         kedge ( :tileMemory -> vtile_mem26:networkInterface)
         // translation from long to short hierarchy - horizontal
         kedge ( :tileProcessor -> vtile_cpu_26:networkInterface)
      }
      // for tile_cpu_26
      knode vtile_cpu_26 {
         klabel "tile_cpu_26"
         kport networkInterface {
            klabel "networkInterface"
         }
         kport defaultMemory {
            klabel "defaultMemory"
         }
         // for tile_os26
         knode vtile_os26 {
            klabel "tile_os26"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :defaultMemory -> vtile_mem26:instructionsAndData)
         // translation from long to short hierarchy - horizontal
         kedge ( :networkInterface -> vtile_ni26:tileProcessor)
      }
      // for tile_mem26
      knode vtile_mem26 {
         klabel "tile_mem26"
         kport networkInterface {
            klabel "networkInterface"
         }
         kport instructionsAndData {
            klabel "instructionsAndData"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :instructionsAndData -> vtile_cpu_26:defaultMemory)
         // translation from long to short hierarchy - horizontal
         kedge ( :networkInterface -> vtile_ni26:tileMemory)
      }
      // port created by long-to-short translation - upwards
      kport router {
      }
      // translation from long to short hierarchy - horizontal
      kedge ( :router -> vtile_router26:ni)
      // translation from long to short hierarchy - backwards
      kedge ( :router -> vtile_ni26:router)
   }
   // for tile_router26
   knode vtile_router26 {
      klabel "tile_router26"
      kport from_1_4 {
         klabel "from_1_4"
      }
      kport from_0_5 {
         klabel "from_0_5"
      }
      kport from_2_5 {
         klabel "from_2_5"
      }
      kport to_1_4 {
         klabel "to_1_4"
      }
      kport to_0_5 {
         klabel "to_0_5"
      }
      kport ni {
         klabel "ni"
      }
      kport to_2_5 {
         klabel "to_2_5"
      }
      // translation from long to short hierarchy - horizontal
      kedge ( :to_1_4 -> vtile_router21)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_2_5 -> vtile_router27:from_1_5)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_1_4 -> vtile_router21:from_1_5)
      // translation from long to short hierarchy - horizontal
      kedge ( :ni -> vtile_26:router)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_0_5 -> vtile_router25:from_1_5)
   }
   // for tile_27
   knode vtile_27 {
      klabel "tile_27"
      // for tile_cpu_27
      knode vtile_cpu_27 {
         klabel "tile_cpu_27"
         kport networkInterface {
            klabel "networkInterface"
         }
         kport defaultMemory {
            klabel "defaultMemory"
         }
         // for tile_os27
         knode vtile_os27 {
            klabel "tile_os27"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :defaultMemory -> vtile_mem27:instructionsAndData)
         // translation from long to short hierarchy - horizontal
         kedge ( :networkInterface -> vtile_ni27:tileProcessor)
      }
      // for tile_ni27
      knode vtile_ni27 {
         klabel "tile_ni27"
         kport router {
            klabel "router"
         }
         kport tileProcessor {
            klabel "tileProcessor"
         }
         kport tileMemory {
            klabel "tileMemory"
         }
         // translation from long to short hierarchy - upwards
         kedge ( :router -> vtile_27:router)
         // translation from long to short hierarchy - horizontal
         kedge ( :tileProcessor -> vtile_cpu_27:networkInterface)
         // translation from long to short hierarchy - horizontal
         kedge ( :tileMemory -> vtile_mem27:networkInterface)
      }
      // for tile_mem27
      knode vtile_mem27 {
         klabel "tile_mem27"
         kport networkInterface {
            klabel "networkInterface"
         }
         kport instructionsAndData {
            klabel "instructionsAndData"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :networkInterface -> vtile_ni27:tileMemory)
         // translation from long to short hierarchy - horizontal
         kedge ( :instructionsAndData -> vtile_cpu_27:defaultMemory)
      }
      // port created by long-to-short translation - backwards
      kport router {
      }
      // translation from long to short hierarchy - backwards
      kedge ( :router -> vtile_ni27:router)
      // translation from long to short hierarchy - horizontal
      kedge ( :router -> vtile_router27:ni)
   }
   // for tile_router27
   knode vtile_router27 {
      klabel "tile_router27"
      kport from_3_5 {
         klabel "from_3_5"
      }
      kport from_2_4 {
         klabel "from_2_4"
      }
      kport from_1_5 {
         klabel "from_1_5"
      }
      kport to_2_4 {
         klabel "to_2_4"
      }
      kport to_1_5 {
         klabel "to_1_5"
      }
      kport ni {
         klabel "ni"
      }
      kport to_3_5 {
         klabel "to_3_5"
      }
      // translation from long to short hierarchy - horizontal
      kedge ( :to_2_4 -> vtile_router22)
      // translation from long to short hierarchy - horizontal
      kedge ( :ni -> vtile_27:router)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_3_5 -> vtile_router28:from_2_5)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_2_4 -> vtile_router22:from_2_5)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_1_5 -> vtile_router26:from_2_5)
   }
   // for tile_28
   knode vtile_28 {
      klabel "tile_28"
      // for tile_cpu_28
      knode vtile_cpu_28 {
         klabel "tile_cpu_28"
         kport networkInterface {
            klabel "networkInterface"
         }
         kport defaultMemory {
            klabel "defaultMemory"
         }
         // for tile_os28
         knode vtile_os28 {
            klabel "tile_os28"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :networkInterface -> vtile_ni28:tileProcessor)
         // translation from long to short hierarchy - horizontal
         kedge ( :defaultMemory -> vtile_mem28:instructionsAndData)
      }
      // for tile_ni28
      knode vtile_ni28 {
         klabel "tile_ni28"
         kport router {
            klabel "router"
         }
         kport tileProcessor {
            klabel "tileProcessor"
         }
         kport tileMemory {
            klabel "tileMemory"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :tileProcessor -> vtile_cpu_28:networkInterface)
         // translation from long to short hierarchy - upwards
         kedge ( :router -> vtile_28:router)
         // translation from long to short hierarchy - horizontal
         kedge ( :tileMemory -> vtile_mem28:networkInterface)
      }
      // for tile_mem28
      knode vtile_mem28 {
         klabel "tile_mem28"
         kport networkInterface {
            klabel "networkInterface"
         }
         kport instructionsAndData {
            klabel "instructionsAndData"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :networkInterface -> vtile_ni28:tileMemory)
         // translation from long to short hierarchy - horizontal
         kedge ( :instructionsAndData -> vtile_cpu_28:defaultMemory)
      }
      // port created by long-to-short translation - upwards
      kport router {
      }
      // translation from long to short hierarchy - horizontal
      kedge ( :router -> vtile_router28:ni)
      // translation from long to short hierarchy - backwards
      kedge ( :router -> vtile_ni28:router)
   }
   // for tile_router28
   knode vtile_router28 {
      klabel "tile_router28"
      kport from_4_5 {
         klabel "from_4_5"
      }
      kport from_3_4 {
         klabel "from_3_4"
      }
      kport from_2_5 {
         klabel "from_2_5"
      }
      kport ni {
         klabel "ni"
      }
      kport to_4_5 {
         klabel "to_4_5"
      }
      kport to_3_4 {
         klabel "to_3_4"
      }
      kport to_2_5 {
         klabel "to_2_5"
      }
      // translation from long to short hierarchy - horizontal
      kedge ( :to_3_4 -> vtile_router23)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_4_5 -> vtile_router29:from_3_5)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_3_4 -> vtile_router23:from_3_5)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_2_5 -> vtile_router27:from_3_5)
      // translation from long to short hierarchy - horizontal
      kedge ( :ni -> vtile_28:router)
   }
   // for tile_29
   knode vtile_29 {
      klabel "tile_29"
      // for tile_cpu_29
      knode vtile_cpu_29 {
         klabel "tile_cpu_29"
         kport networkInterface {
            klabel "networkInterface"
         }
         kport defaultMemory {
            klabel "defaultMemory"
         }
         // for tile_os29
         knode vtile_os29 {
            klabel "tile_os29"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :networkInterface -> vtile_ni29:tileProcessor)
         // translation from long to short hierarchy - horizontal
         kedge ( :defaultMemory -> vtile_mem29:instructionsAndData)
      }
      // for tile_ni29
      knode vtile_ni29 {
         klabel "tile_ni29"
         kport router {
            klabel "router"
         }
         kport tileProcessor {
            klabel "tileProcessor"
         }
         kport tileMemory {
            klabel "tileMemory"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :tileProcessor -> vtile_cpu_29:networkInterface)
         // translation from long to short hierarchy - horizontal
         kedge ( :tileMemory -> vtile_mem29:networkInterface)
         // translation from long to short hierarchy - upwards
         kedge ( :router -> vtile_29:router)
      }
      // for tile_mem29
      knode vtile_mem29 {
         klabel "tile_mem29"
         kport networkInterface {
            klabel "networkInterface"
         }
         kport instructionsAndData {
            klabel "instructionsAndData"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :networkInterface -> vtile_ni29:tileMemory)
         // translation from long to short hierarchy - horizontal
         kedge ( :instructionsAndData -> vtile_cpu_29:defaultMemory)
      }
      // port created by long-to-short translation - backwards
      kport router {
      }
      // translation from long to short hierarchy - backwards
      kedge ( :router -> vtile_ni29:router)
      // translation from long to short hierarchy - horizontal
      kedge ( :router -> vtile_router29:ni)
   }
   // for tile_router21
   knode vtile_router21 {
      klabel "tile_router21"
      kport from_1_3 {
         klabel "from_1_3"
      }
      kport from_0_4 {
         klabel "from_0_4"
      }
      kport from_2_4 {
         klabel "from_2_4"
      }
      kport from_1_5 {
         klabel "from_1_5"
      }
      kport to_2_4 {
         klabel "to_2_4"
      }
      kport to_1_5 {
         klabel "to_1_5"
      }
      kport ni {
         klabel "ni"
      }
      kport to_1_3 {
         klabel "to_1_3"
      }
      kport to_0_4 {
         klabel "to_0_4"
      }
      // translation from long to short hierarchy - horizontal
      kedge ( :to_1_3 -> vtile_router16:from_1_4)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_2_4 -> vtile_router22:from_1_4)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_1_5 -> vtile_router26:from_1_4)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_0_4 -> vtile_router20:from_1_4)
      // translation from long to short hierarchy - horizontal
      kedge ( :ni -> vtile_21:router)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_1_3 -> vtile_router16)
   }
   // for tile_router22
   knode vtile_router22 {
      klabel "tile_router22"
      kport from_2_3 {
         klabel "from_2_3"
      }
      kport from_1_4 {
         klabel "from_1_4"
      }
      kport from_3_4 {
         klabel "from_3_4"
      }
      kport from_2_5 {
         klabel "from_2_5"
      }
      kport to_2_3 {
         klabel "to_2_3"
      }
      kport to_1_4 {
         klabel "to_1_4"
      }
      kport ni {
         klabel "ni"
      }
      kport to_3_4 {
         klabel "to_3_4"
      }
      kport to_2_5 {
         klabel "to_2_5"
      }
      // translation from long to short hierarchy - horizontal
      kedge ( :to_2_3 -> vtile_router17)
      // translation from long to short hierarchy - horizontal
      kedge ( :ni -> vtile_22:router)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_2_3 -> vtile_router17:from_2_4)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_3_4 -> vtile_router23:from_2_4)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_1_4 -> vtile_router21:from_2_4)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_2_5 -> vtile_router27:from_2_4)
   }
   // for tile_router23
   knode vtile_router23 {
      klabel "tile_router23"
      kport from_4_4 {
         klabel "from_4_4"
      }
      kport from_3_5 {
         klabel "from_3_5"
      }
      kport from_3_3 {
         klabel "from_3_3"
      }
      kport from_2_4 {
         klabel "from_2_4"
      }
      kport to_3_3 {
         klabel "to_3_3"
      }
      kport to_2_4 {
         klabel "to_2_4"
      }
      kport ni {
         klabel "ni"
      }
      kport to_4_4 {
         klabel "to_4_4"
      }
      kport to_3_5 {
         klabel "to_3_5"
      }
      // translation from long to short hierarchy - horizontal
      kedge ( :ni -> vtile_23:router)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_3_5 -> vtile_router28:from_4_5)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_3_3 -> vtile_router18:from_3_4)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_4_4 -> vtile_router24:from_3_4)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_3_3 -> vtile_router18:from_4_3)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_2_4 -> vtile_router22:from_3_4)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_3_5 -> vtile_router28:from_3_4)
   }
   // for tile_router24
   knode vtile_router24 {
      klabel "tile_router24"
      kport from_4_5 {
         klabel "from_4_5"
      }
      kport from_4_3 {
         klabel "from_4_3"
      }
      kport from_3_4 {
         klabel "from_3_4"
      }
      kport ni {
         klabel "ni"
      }
      kport to_4_5 {
         klabel "to_4_5"
      }
      kport to_4_3 {
         klabel "to_4_3"
      }
      kport to_3_4 {
         klabel "to_3_4"
      }
      // translation from long to short hierarchy - horizontal
      kedge ( :to_4_3 -> vtile_router19)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_4_3 -> vtile_router19:from_4_4)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_4_5 -> vtile_router29:from_4_4)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_3_4 -> vtile_router23:from_4_4)
      // translation from long to short hierarchy - horizontal
      kedge ( :ni -> vtile_24:router)
   }
   // for tile_router20
   knode vtile_router20 {
      klabel "tile_router20"
      kport from_1_4 {
         klabel "from_1_4"
      }
      kport from_0_5 {
         klabel "from_0_5"
      }
      kport to_1_4 {
         klabel "to_1_4"
      }
      kport to_0_5 {
         klabel "to_0_5"
      }
      kport to_0_3 {
         klabel "to_0_3"
      }
      kport ni {
         klabel "ni"
      }
      kport from_0_3 {
         klabel "from_0_3"
      }
      // translation from long to short hierarchy - horizontal
      kedge ( :to_0_3 -> vtile_router15:from_0_4)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_1_4 -> vtile_router21:from_0_4)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_0_5 -> vtile_router25:from_0_4)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_0_3 -> vtile_router15)
      // translation from long to short hierarchy - horizontal
      kedge ( :ni -> vtile_20:router)
   }
   // for tile_router18
   knode vtile_router18 {
      klabel "tile_router18"
      kport from_3_2 {
         klabel "from_3_2"
      }
      kport from_2_3 {
         klabel "from_2_3"
      }
      kport from_4_3 {
         klabel "from_4_3"
      }
      kport from_3_4 {
         klabel "from_3_4"
      }
      kport to_3_2 {
         klabel "to_3_2"
      }
      kport to_2_3 {
         klabel "to_2_3"
      }
      kport ni {
         klabel "ni"
      }
      kport to_4_3 {
         klabel "to_4_3"
      }
      kport to_3_4 {
         klabel "to_3_4"
      }
      // translation from long to short hierarchy - horizontal
      kedge ( :to_4_3 -> vtile_router19:from_3_3)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_3_2 -> vtile_router13:from_3_3)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_2_3 -> vtile_router17:from_3_3)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_3_4 -> vtile_router23:from_3_3)
      // translation from long to short hierarchy - horizontal
      kedge ( :ni -> vtile_18:router)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_3_2 -> vtile_router13)
   }
   // for tile_19
   knode vtile_19 {
      klabel "tile_19"
      // for tile_cpu_19
      knode vtile_cpu_19 {
         klabel "tile_cpu_19"
         kport networkInterface {
            klabel "networkInterface"
         }
         kport defaultMemory {
            klabel "defaultMemory"
         }
         // for tile_os19
         knode vtile_os19 {
            klabel "tile_os19"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :defaultMemory -> vtile_mem19:instructionsAndData)
         // translation from long to short hierarchy - horizontal
         kedge ( :networkInterface -> vtile_ni19:tileProcessor)
      }
      // for tile_ni19
      knode vtile_ni19 {
         klabel "tile_ni19"
         kport router {
            klabel "router"
         }
         kport tileProcessor {
            klabel "tileProcessor"
         }
         kport tileMemory {
            klabel "tileMemory"
         }
         // translation from long to short hierarchy - upwards
         kedge ( :router -> vtile_19:router)
         // translation from long to short hierarchy - horizontal
         kedge ( :tileMemory -> vtile_mem19:networkInterface)
         // translation from long to short hierarchy - horizontal
         kedge ( :tileProcessor -> vtile_cpu_19:networkInterface)
      }
      // for tile_mem19
      knode vtile_mem19 {
         klabel "tile_mem19"
         kport networkInterface {
            klabel "networkInterface"
         }
         kport instructionsAndData {
            klabel "instructionsAndData"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :networkInterface -> vtile_ni19:tileMemory)
         // translation from long to short hierarchy - horizontal
         kedge ( :instructionsAndData -> vtile_cpu_19:defaultMemory)
      }
      // port created by long-to-short translation - upwards
      kport router {
      }
      // translation from long to short hierarchy - horizontal
      kedge ( :router -> vtile_router19:ni)
      // translation from long to short hierarchy - backwards
      kedge ( :router -> vtile_ni19:router)
   }
   // for tile_router19
   knode vtile_router19 {
      klabel "tile_router19"
      kport from_4_4 {
         klabel "from_4_4"
      }
      kport from_4_2 {
         klabel "from_4_2"
      }
      kport from_3_3 {
         klabel "from_3_3"
      }
      kport to_4_2 {
         klabel "to_4_2"
      }
      kport to_3_3 {
         klabel "to_3_3"
      }
      kport ni {
         klabel "ni"
      }
      kport to_4_4 {
         klabel "to_4_4"
      }
      // translation from long to short hierarchy - horizontal
      kedge ( :to_4_2 -> vtile_router14:from_4_3)
      // translation from long to short hierarchy - horizontal
      kedge ( :ni -> vtile_19:router)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_3_3 -> vtile_router18:from_4_3)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_4_4 -> vtile_router24:from_3_4)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_4_4 -> vtile_router24:from_4_3)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_4_2 -> vtile_router14:from_3_2)
   }
   // for tile_router14
   knode vtile_router14 {
      klabel "tile_router14"
      kport from_4_1 {
         klabel "from_4_1"
      }
      kport from_3_2 {
         klabel "from_3_2"
      }
      kport from_4_3 {
         klabel "from_4_3"
      }
      kport to_4_1 {
         klabel "to_4_1"
      }
      kport to_3_2 {
         klabel "to_3_2"
      }
      kport ni {
         klabel "ni"
      }
      kport to_4_3 {
         klabel "to_4_3"
      }
      // translation from long to short hierarchy - horizontal
      kedge ( :to_4_1 -> vtile_router9)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_4_3 -> vtile_router19:from_4_2)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_3_2 -> vtile_router13:from_4_2)
      // translation from long to short hierarchy - horizontal
      kedge ( :ni -> vtile_14:router)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_4_1 -> vtile_router9:from_4_2)
   }
   // for tile_15
   knode vtile_15 {
      klabel "tile_15"
      // for tile_ni15
      knode vtile_ni15 {
         klabel "tile_ni15"
         kport router {
            klabel "router"
         }
         kport tileProcessor {
            klabel "tileProcessor"
         }
         kport tileMemory {
            klabel "tileMemory"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :tileMemory -> vtile_mem15:networkInterface)
         // translation from long to short hierarchy - upwards
         kedge ( :router -> vtile_15:router)
         // translation from long to short hierarchy - horizontal
         kedge ( :tileProcessor -> vtile_cpu_15:networkInterface)
      }
      // for tile_cpu_15
      knode vtile_cpu_15 {
         klabel "tile_cpu_15"
         kport networkInterface {
            klabel "networkInterface"
         }
         kport defaultMemory {
            klabel "defaultMemory"
         }
         // for tile_os15
         knode vtile_os15 {
            klabel "tile_os15"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :defaultMemory -> vtile_mem15:instructionsAndData)
         // translation from long to short hierarchy - horizontal
         kedge ( :networkInterface -> vtile_ni15:tileProcessor)
      }
      // for tile_mem15
      knode vtile_mem15 {
         klabel "tile_mem15"
         kport networkInterface {
            klabel "networkInterface"
         }
         kport instructionsAndData {
            klabel "instructionsAndData"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :instructionsAndData -> vtile_cpu_15:defaultMemory)
         // translation from long to short hierarchy - horizontal
         kedge ( :networkInterface -> vtile_ni15:tileMemory)
      }
      // port created by long-to-short translation - upwards
      kport router {
      }
      // translation from long to short hierarchy - horizontal
      kedge ( :router -> vtile_router15:ni)
      // translation from long to short hierarchy - backwards
      kedge ( :router -> vtile_ni15:router)
   }
   // for tile_router15
   knode vtile_router15 {
      klabel "tile_router15"
      kport from_1_3 {
         klabel "from_1_3"
      }
      kport from_0_4 {
         klabel "from_0_4"
      }
      kport to_0_2 {
         klabel "to_0_2"
      }
      kport from_0_2 {
         klabel "from_0_2"
      }
      kport ni {
         klabel "ni"
      }
      kport to_1_3 {
         klabel "to_1_3"
      }
      kport to_0_4 {
         klabel "to_0_4"
      }
      // translation from long to short hierarchy - horizontal
      kedge ( :ni -> vtile_15:router)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_0_2 -> vtile_router10)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_0_2 -> vtile_router10:from_0_3)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_1_3 -> vtile_router16:from_0_3)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_0_4 -> vtile_router20:from_0_3)
   }
   // for tile_16
   knode vtile_16 {
      klabel "tile_16"
      // for tile_cpu_16
      knode vtile_cpu_16 {
         klabel "tile_cpu_16"
         kport networkInterface {
            klabel "networkInterface"
         }
         kport defaultMemory {
            klabel "defaultMemory"
         }
         // for tile_os16
         knode vtile_os16 {
            klabel "tile_os16"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :defaultMemory -> vtile_mem16:instructionsAndData)
         // translation from long to short hierarchy - horizontal
         kedge ( :networkInterface -> vtile_ni16:tileProcessor)
      }
      // for tile_ni16
      knode vtile_ni16 {
         klabel "tile_ni16"
         kport router {
            klabel "router"
         }
         kport tileProcessor {
            klabel "tileProcessor"
         }
         kport tileMemory {
            klabel "tileMemory"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :tileProcessor -> vtile_cpu_16:networkInterface)
         // translation from long to short hierarchy - upwards
         kedge ( :router -> vtile_16:router)
         // translation from long to short hierarchy - horizontal
         kedge ( :tileMemory -> vtile_mem16:networkInterface)
      }
      // for tile_mem16
      knode vtile_mem16 {
         klabel "tile_mem16"
         kport networkInterface {
            klabel "networkInterface"
         }
         kport instructionsAndData {
            klabel "instructionsAndData"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :networkInterface -> vtile_ni16:tileMemory)
         // translation from long to short hierarchy - horizontal
         kedge ( :instructionsAndData -> vtile_cpu_16:defaultMemory)
      }
      // port created by long-to-short translation - backwards
      kport router {
      }
      // translation from long to short hierarchy - backwards
      kedge ( :router -> vtile_ni16:router)
      // translation from long to short hierarchy - horizontal
      kedge ( :router -> vtile_router16:ni)
   }
   // for tile_router16
   knode vtile_router16 {
      klabel "tile_router16"
      kport from_2_3 {
         klabel "from_2_3"
      }
      kport from_1_4 {
         klabel "from_1_4"
      }
      kport to_2_3 {
         klabel "to_2_3"
      }
      kport to_1_4 {
         klabel "to_1_4"
      }
      kport to_1_2 {
         klabel "to_1_2"
      }
      kport to_0_3 {
         klabel "to_0_3"
      }
      kport ni {
         klabel "ni"
      }
      kport from_1_2 {
         klabel "from_1_2"
      }
      kport from_0_3 {
         klabel "from_0_3"
      }
      // translation from long to short hierarchy - horizontal
      kedge ( :to_1_4 -> vtile_router21:from_1_3)
      // translation from long to short hierarchy - horizontal
      kedge ( :ni -> vtile_16:router)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_1_2 -> vtile_router11)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_1_2 -> vtile_router11:from_1_3)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_2_3 -> vtile_router17:from_1_3)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_0_3 -> vtile_router15:from_1_3)
   }
   // for tile_17
   knode vtile_17 {
      klabel "tile_17"
      // for tile_cpu_17
      knode vtile_cpu_17 {
         klabel "tile_cpu_17"
         kport networkInterface {
            klabel "networkInterface"
         }
         kport defaultMemory {
            klabel "defaultMemory"
         }
         // for tile_os17
         knode vtile_os17 {
            klabel "tile_os17"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :networkInterface -> vtile_ni17:tileProcessor)
         // translation from long to short hierarchy - horizontal
         kedge ( :defaultMemory -> vtile_mem17:instructionsAndData)
      }
      // for tile_ni17
      knode vtile_ni17 {
         klabel "tile_ni17"
         kport router {
            klabel "router"
         }
         kport tileProcessor {
            klabel "tileProcessor"
         }
         kport tileMemory {
            klabel "tileMemory"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :tileProcessor -> vtile_cpu_17:networkInterface)
         // translation from long to short hierarchy - upwards
         kedge ( :router -> vtile_17:router)
         // translation from long to short hierarchy - horizontal
         kedge ( :tileMemory -> vtile_mem17:networkInterface)
      }
      // for tile_mem17
      knode vtile_mem17 {
         klabel "tile_mem17"
         kport networkInterface {
            klabel "networkInterface"
         }
         kport instructionsAndData {
            klabel "instructionsAndData"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :networkInterface -> vtile_ni17:tileMemory)
         // translation from long to short hierarchy - horizontal
         kedge ( :instructionsAndData -> vtile_cpu_17:defaultMemory)
      }
      // port created by long-to-short translation - upwards
      kport router {
      }
      // translation from long to short hierarchy - horizontal
      kedge ( :router -> vtile_router17:ni)
      // translation from long to short hierarchy - backwards
      kedge ( :router -> vtile_ni17:router)
   }
   // for tile_router17
   knode vtile_router17 {
      klabel "tile_router17"
      kport from_2_2 {
         klabel "from_2_2"
      }
      kport from_1_3 {
         klabel "from_1_3"
      }
      kport from_3_3 {
         klabel "from_3_3"
      }
      kport from_2_4 {
         klabel "from_2_4"
      }
      kport to_3_3 {
         klabel "to_3_3"
      }
      kport to_2_4 {
         klabel "to_2_4"
      }
      kport ni {
         klabel "ni"
      }
      kport to_2_2 {
         klabel "to_2_2"
      }
      kport to_1_3 {
         klabel "to_1_3"
      }
      // translation from long to short hierarchy - horizontal
      kedge ( :to_1_3 -> vtile_router16:from_2_3)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_2_2 -> vtile_router12:from_3_2)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_2_4 -> vtile_router22:from_2_3)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_2_4 -> vtile_router22:from_3_4)
      // translation from long to short hierarchy - horizontal
      kedge ( :ni -> vtile_17:router)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_2_2 -> vtile_router12:from_2_3)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_3_3 -> vtile_router18:from_2_3)
   }
   // for tile_18
   knode vtile_18 {
      klabel "tile_18"
      // for tile_cpu_18
      knode vtile_cpu_18 {
         klabel "tile_cpu_18"
         kport networkInterface {
            klabel "networkInterface"
         }
         kport defaultMemory {
            klabel "defaultMemory"
         }
         // for tile_os18
         knode vtile_os18 {
            klabel "tile_os18"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :defaultMemory -> vtile_mem18:instructionsAndData)
         // translation from long to short hierarchy - horizontal
         kedge ( :networkInterface -> vtile_ni18:tileProcessor)
      }
      // for tile_ni18
      knode vtile_ni18 {
         klabel "tile_ni18"
         kport router {
            klabel "router"
         }
         kport tileProcessor {
            klabel "tileProcessor"
         }
         kport tileMemory {
            klabel "tileMemory"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :tileMemory -> vtile_mem18:networkInterface)
         // translation from long to short hierarchy - horizontal
         kedge ( :tileProcessor -> vtile_cpu_18:networkInterface)
         // translation from long to short hierarchy - upwards
         kedge ( :router -> vtile_18:router)
      }
      // for tile_mem18
      knode vtile_mem18 {
         klabel "tile_mem18"
         kport networkInterface {
            klabel "networkInterface"
         }
         kport instructionsAndData {
            klabel "instructionsAndData"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :instructionsAndData -> vtile_cpu_18:defaultMemory)
         // translation from long to short hierarchy - horizontal
         kedge ( :networkInterface -> vtile_ni18:tileMemory)
      }
      // port created by long-to-short translation - backwards
      kport router {
      }
      // translation from long to short hierarchy - backwards
      kedge ( :router -> vtile_ni18:router)
      // translation from long to short hierarchy - horizontal
      kedge ( :router -> vtile_router18:ni)
   }
   // for tile_router10
   knode vtile_router10 {
      klabel "tile_router10"
      kport to_0_1 {
         klabel "to_0_1"
      }
      kport from_0_1 {
         klabel "from_0_1"
      }
      kport to_1_2 {
         klabel "to_1_2"
      }
      kport to_0_3 {
         klabel "to_0_3"
      }
      kport ni {
         klabel "ni"
      }
      kport from_1_2 {
         klabel "from_1_2"
      }
      kport from_0_3 {
         klabel "from_0_3"
      }
      // translation from long to short hierarchy - horizontal
      kedge ( :to_0_1 -> vtile_router5:from_0_2)
      // translation from long to short hierarchy - horizontal
      kedge ( :ni -> vtile_10:router)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_0_1 -> vtile_router5)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_0_3 -> vtile_router15:from_0_2)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_1_2 -> vtile_router11:from_0_2)
   }
   // for tile_router11
   knode vtile_router11 {
      klabel "tile_router11"
      kport from_2_2 {
         klabel "from_2_2"
      }
      kport from_1_3 {
         klabel "from_1_3"
      }
      kport to_1_1 {
         klabel "to_1_1"
      }
      kport to_0_2 {
         klabel "to_0_2"
      }
      kport from_1_1 {
         klabel "from_1_1"
      }
      kport from_0_2 {
         klabel "from_0_2"
      }
      kport ni {
         klabel "ni"
      }
      kport to_2_2 {
         klabel "to_2_2"
      }
      kport to_1_3 {
         klabel "to_1_3"
      }
      // translation from long to short hierarchy - horizontal
      kedge ( :to_1_3 -> vtile_router16:from_1_2)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_0_2 -> vtile_router10:from_1_2)
      // translation from long to short hierarchy - horizontal
      kedge ( :ni -> vtile_11:router)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_1_3 -> vtile_router16:from_2_3)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_1_1 -> vtile_router6:from_1_2)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_2_2 -> vtile_router12:from_1_2)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_1_1 -> vtile_router6:from_2_1)
   }
   // for tile_router12
   knode vtile_router12 {
      klabel "tile_router12"
      kport from_3_2 {
         klabel "from_3_2"
      }
      kport from_2_3 {
         klabel "from_2_3"
      }
      kport to_3_2 {
         klabel "to_3_2"
      }
      kport to_2_3 {
         klabel "to_2_3"
      }
      kport to_2_1 {
         klabel "to_2_1"
      }
      kport to_1_2 {
         klabel "to_1_2"
      }
      kport ni {
         klabel "ni"
      }
      kport from_2_1 {
         klabel "from_2_1"
      }
      kport from_1_2 {
         klabel "from_1_2"
      }
      // translation from long to short hierarchy - horizontal
      kedge ( :to_3_2 -> vtile_router13:from_2_2)
      // translation from long to short hierarchy - horizontal
      kedge ( :ni -> vtile_12:router)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_2_3 -> vtile_router17:from_2_2)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_1_2 -> vtile_router11:from_2_2)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_2_1 -> vtile_router7)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_2_1 -> vtile_router7:from_2_2)
   }
   // for tile_router13
   knode vtile_router13 {
      klabel "tile_router13"
      kport from_3_1 {
         klabel "from_3_1"
      }
      kport from_2_2 {
         klabel "from_2_2"
      }
      kport from_4_2 {
         klabel "from_4_2"
      }
      kport from_3_3 {
         klabel "from_3_3"
      }
      kport to_4_2 {
         klabel "to_4_2"
      }
      kport to_3_3 {
         klabel "to_3_3"
      }
      kport ni {
         klabel "ni"
      }
      kport to_3_1 {
         klabel "to_3_1"
      }
      kport to_2_2 {
         klabel "to_2_2"
      }
      // translation from long to short hierarchy - horizontal
      kedge ( :to_3_3 -> vtile_router18:from_2_3)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_3_1 -> vtile_router8:from_2_1)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_4_2 -> vtile_router14:from_3_2)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_3_3 -> vtile_router18:from_3_2)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_2_2 -> vtile_router12:from_3_2)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_3_1 -> vtile_router8:from_3_2)
      // translation from long to short hierarchy - horizontal
      kedge ( :ni -> vtile_13:router)
   }
   // for tile_22
   knode vtile_22 {
      klabel "tile_22"
      // for tile_mem22
      knode vtile_mem22 {
         klabel "tile_mem22"
         kport networkInterface {
            klabel "networkInterface"
         }
         kport instructionsAndData {
            klabel "instructionsAndData"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :instructionsAndData -> vtile_cpu_22:defaultMemory)
         // translation from long to short hierarchy - horizontal
         kedge ( :networkInterface -> vtile_ni22:tileMemory)
      }
      // for tile_cpu_22
      knode vtile_cpu_22 {
         klabel "tile_cpu_22"
         kport networkInterface {
            klabel "networkInterface"
         }
         kport defaultMemory {
            klabel "defaultMemory"
         }
         // for tile_os22
         knode vtile_os22 {
            klabel "tile_os22"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :defaultMemory -> vtile_mem22:instructionsAndData)
         // translation from long to short hierarchy - horizontal
         kedge ( :networkInterface -> vtile_ni22:tileProcessor)
      }
      // for tile_ni22
      knode vtile_ni22 {
         klabel "tile_ni22"
         kport router {
            klabel "router"
         }
         kport tileProcessor {
            klabel "tileProcessor"
         }
         kport tileMemory {
            klabel "tileMemory"
         }
         // translation from long to short hierarchy - upwards
         kedge ( :router -> vtile_22:router)
         // translation from long to short hierarchy - horizontal
         kedge ( :tileMemory -> vtile_mem22:networkInterface)
         // translation from long to short hierarchy - horizontal
         kedge ( :tileProcessor -> vtile_cpu_22:networkInterface)
      }
      // port created by long-to-short translation - upwards
      kport router {
      }
      // translation from long to short hierarchy - horizontal
      kedge ( :router -> vtile_router22:ni)
      // translation from long to short hierarchy - backwards
      kedge ( :router -> vtile_ni22:router)
   }
   // for tile_23
   knode vtile_23 {
      klabel "tile_23"
      // for tile_ni23
      knode vtile_ni23 {
         klabel "tile_ni23"
         kport router {
            klabel "router"
         }
         kport tileProcessor {
            klabel "tileProcessor"
         }
         kport tileMemory {
            klabel "tileMemory"
         }
         // translation from long to short hierarchy - upwards
         kedge ( :router -> vtile_23:router)
         // translation from long to short hierarchy - horizontal
         kedge ( :tileProcessor -> vtile_cpu_23:networkInterface)
         // translation from long to short hierarchy - horizontal
         kedge ( :tileMemory -> vtile_mem23:networkInterface)
      }
      // for tile_mem23
      knode vtile_mem23 {
         klabel "tile_mem23"
         kport networkInterface {
            klabel "networkInterface"
         }
         kport instructionsAndData {
            klabel "instructionsAndData"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :networkInterface -> vtile_ni23:tileMemory)
         // translation from long to short hierarchy - horizontal
         kedge ( :instructionsAndData -> vtile_cpu_23:defaultMemory)
      }
      // for tile_cpu_23
      knode vtile_cpu_23 {
         klabel "tile_cpu_23"
         kport networkInterface {
            klabel "networkInterface"
         }
         kport defaultMemory {
            klabel "defaultMemory"
         }
         // for tile_os23
         knode vtile_os23 {
            klabel "tile_os23"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :defaultMemory -> vtile_mem23:instructionsAndData)
         // translation from long to short hierarchy - horizontal
         kedge ( :networkInterface -> vtile_ni23:tileProcessor)
      }
      // port created by long-to-short translation - backwards
      kport router {
      }
      // translation from long to short hierarchy - backwards
      kedge ( :router -> vtile_ni23:router)
      // translation from long to short hierarchy - horizontal
      kedge ( :router -> vtile_router23:ni)
   }
   // for tile_24
   knode vtile_24 {
      klabel "tile_24"
      // for tile_ni24
      knode vtile_ni24 {
         klabel "tile_ni24"
         kport router {
            klabel "router"
         }
         kport tileProcessor {
            klabel "tileProcessor"
         }
         kport tileMemory {
            klabel "tileMemory"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :tileProcessor -> vtile_cpu_24:networkInterface)
         // translation from long to short hierarchy - upwards
         kedge ( :router -> vtile_24:router)
         // translation from long to short hierarchy - horizontal
         kedge ( :tileMemory -> vtile_mem24:networkInterface)
      }
      // for tile_mem24
      knode vtile_mem24 {
         klabel "tile_mem24"
         kport networkInterface {
            klabel "networkInterface"
         }
         kport instructionsAndData {
            klabel "instructionsAndData"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :networkInterface -> vtile_ni24:tileMemory)
         // translation from long to short hierarchy - horizontal
         kedge ( :instructionsAndData -> vtile_cpu_24:defaultMemory)
      }
      // for tile_cpu_24
      knode vtile_cpu_24 {
         klabel "tile_cpu_24"
         kport networkInterface {
            klabel "networkInterface"
         }
         kport defaultMemory {
            klabel "defaultMemory"
         }
         // for tile_os24
         knode vtile_os24 {
            klabel "tile_os24"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :networkInterface -> vtile_ni24:tileProcessor)
         // translation from long to short hierarchy - horizontal
         kedge ( :defaultMemory -> vtile_mem24:instructionsAndData)
      }
      // port created by long-to-short translation - upwards
      kport router {
      }
      // translation from long to short hierarchy - horizontal
      kedge ( :router -> vtile_router24:ni)
      // translation from long to short hierarchy - backwards
      kedge ( :router -> vtile_ni24:router)
   }
   // for tile_25
   knode vtile_25 {
      klabel "tile_25"
      // for tile_ni25
      knode vtile_ni25 {
         klabel "tile_ni25"
         kport router {
            klabel "router"
         }
         kport tileProcessor {
            klabel "tileProcessor"
         }
         kport tileMemory {
            klabel "tileMemory"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :tileProcessor -> vtile_cpu_25:networkInterface)
         // translation from long to short hierarchy - horizontal
         kedge ( :tileMemory -> vtile_mem25:networkInterface)
         // translation from long to short hierarchy - upwards
         kedge ( :router -> vtile_25:router)
      }
      // for tile_cpu_25
      knode vtile_cpu_25 {
         klabel "tile_cpu_25"
         kport networkInterface {
            klabel "networkInterface"
         }
         kport defaultMemory {
            klabel "defaultMemory"
         }
         // for tile_os25
         knode vtile_os25 {
            klabel "tile_os25"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :networkInterface -> vtile_ni25:tileProcessor)
         // translation from long to short hierarchy - horizontal
         kedge ( :defaultMemory -> vtile_mem25:instructionsAndData)
      }
      // for tile_mem25
      knode vtile_mem25 {
         klabel "tile_mem25"
         kport networkInterface {
            klabel "networkInterface"
         }
         kport instructionsAndData {
            klabel "instructionsAndData"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :instructionsAndData -> vtile_cpu_25:defaultMemory)
         // translation from long to short hierarchy - horizontal
         kedge ( :networkInterface -> vtile_ni25:tileMemory)
      }
      // port created by long-to-short translation - backwards
      kport router {
      }
      // translation from long to short hierarchy - backwards
      kedge ( :router -> vtile_ni25:router)
      // translation from long to short hierarchy - horizontal
      kedge ( :router -> vtile_router25:ni)
   }
   // for tile_20
   knode vtile_20 {
      klabel "tile_20"
      // for tile_mem20
      knode vtile_mem20 {
         klabel "tile_mem20"
         kport networkInterface {
            klabel "networkInterface"
         }
         kport instructionsAndData {
            klabel "instructionsAndData"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :networkInterface -> vtile_ni20:tileMemory)
         // translation from long to short hierarchy - horizontal
         kedge ( :instructionsAndData -> vtile_cpu_20:defaultMemory)
      }
      // for tile_cpu_20
      knode vtile_cpu_20 {
         klabel "tile_cpu_20"
         kport networkInterface {
            klabel "networkInterface"
         }
         kport defaultMemory {
            klabel "defaultMemory"
         }
         // for tile_os20
         knode vtile_os20 {
            klabel "tile_os20"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :networkInterface -> vtile_ni20:tileProcessor)
         // translation from long to short hierarchy - horizontal
         kedge ( :defaultMemory -> vtile_mem20:instructionsAndData)
      }
      // for tile_ni20
      knode vtile_ni20 {
         klabel "tile_ni20"
         kport router {
            klabel "router"
         }
         kport tileProcessor {
            klabel "tileProcessor"
         }
         kport tileMemory {
            klabel "tileMemory"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :tileProcessor -> vtile_cpu_20:networkInterface)
         // translation from long to short hierarchy - upwards
         kedge ( :router -> vtile_20:router)
         // translation from long to short hierarchy - horizontal
         kedge ( :tileMemory -> vtile_mem20:networkInterface)
      }
      // port created by long-to-short translation - upwards
      kport router {
      }
      // translation from long to short hierarchy - horizontal
      kedge ( :router -> vtile_router20:ni)
      // translation from long to short hierarchy - backwards
      kedge ( :router -> vtile_ni20:router)
   }
   // for tile_21
   knode vtile_21 {
      klabel "tile_21"
      // for tile_mem21
      knode vtile_mem21 {
         klabel "tile_mem21"
         kport networkInterface {
            klabel "networkInterface"
         }
         kport instructionsAndData {
            klabel "instructionsAndData"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :instructionsAndData -> vtile_cpu_21:defaultMemory)
         // translation from long to short hierarchy - horizontal
         kedge ( :networkInterface -> vtile_ni21:tileMemory)
      }
      // for tile_cpu_21
      knode vtile_cpu_21 {
         klabel "tile_cpu_21"
         kport networkInterface {
            klabel "networkInterface"
         }
         kport defaultMemory {
            klabel "defaultMemory"
         }
         // for tile_os21
         knode vtile_os21 {
            klabel "tile_os21"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :networkInterface -> vtile_ni21:tileProcessor)
         // translation from long to short hierarchy - horizontal
         kedge ( :defaultMemory -> vtile_mem21:instructionsAndData)
      }
      // for tile_ni21
      knode vtile_ni21 {
         klabel "tile_ni21"
         kport router {
            klabel "router"
         }
         kport tileProcessor {
            klabel "tileProcessor"
         }
         kport tileMemory {
            klabel "tileMemory"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :tileProcessor -> vtile_cpu_21:networkInterface)
         // translation from long to short hierarchy - horizontal
         kedge ( :tileMemory -> vtile_mem21:networkInterface)
         // translation from long to short hierarchy - upwards
         kedge ( :router -> vtile_21:router)
      }
      // port created by long-to-short translation - backwards
      kport router {
      }
      // translation from long to short hierarchy - backwards
      kedge ( :router -> vtile_ni21:router)
      // translation from long to short hierarchy - horizontal
      kedge ( :router -> vtile_router21:ni)
   }
   // for tile_router1
   knode vtile_router1 {
      klabel "tile_router1"
      kport to_2_0 {
         klabel "to_2_0"
      }
      kport to_1_1 {
         klabel "to_1_1"
      }
      kport to_0_0 {
         klabel "to_0_0"
      }
      kport from_0_0 {
         klabel "from_0_0"
      }
      kport from_2_0 {
         klabel "from_2_0"
      }
      kport from_1_1 {
         klabel "from_1_1"
      }
      kport ni {
         klabel "ni"
      }
      // translation from long to short hierarchy - horizontal
      kedge ( :to_0_0 -> vtile_router0:from_1_0)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_1_1 -> vtile_router6:from_1_0)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_2_0 -> vtile_router2:from_1_0)
      // translation from long to short hierarchy - horizontal
      kedge ( :ni -> vtile_1:router)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_1_1 -> vtile_router6:from_0_1)
   }
   // for tile_router2
   knode vtile_router2 {
      klabel "tile_router2"
      kport to_1_0 {
         klabel "to_1_0"
      }
      kport from_1_0 {
         klabel "from_1_0"
      }
      kport to_3_0 {
         klabel "to_3_0"
      }
      kport to_2_1 {
         klabel "to_2_1"
      }
      kport ni {
         klabel "ni"
      }
      kport from_3_0 {
         klabel "from_3_0"
      }
      kport from_2_1 {
         klabel "from_2_1"
      }
      // translation from long to short hierarchy - horizontal
      kedge ( :to_3_0 -> vtile_router3:from_2_0)
      // translation from long to short hierarchy - horizontal
      kedge ( :ni -> vtile_2:router)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_1_0 -> vtile_router1:from_2_0)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_2_1 -> vtile_router7:from_2_0)
   }
   // for tile_router0
   knode vtile_router0 {
      klabel "tile_router0"
      kport to_1_0 {
         klabel "to_1_0"
      }
      kport to_0_1 {
         klabel "to_0_1"
      }
      kport from_1_0 {
         klabel "from_1_0"
      }
      kport from_0_1 {
         klabel "from_0_1"
      }
      kport ni {
         klabel "ni"
      }
      // translation from long to short hierarchy - horizontal
      kedge ( :ni -> vtile_0:router)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_1_0 -> vtile_router1:from_0_0)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_0_1 -> vtile_router5:from_0_0)
   }
   // for tile_router5
   knode vtile_router5 {
      klabel "tile_router5"
      kport to_1_1 {
         klabel "to_1_1"
      }
      kport to_0_2 {
         klabel "to_0_2"
      }
      kport to_0_0 {
         klabel "to_0_0"
      }
      kport from_0_0 {
         klabel "from_0_0"
      }
      kport from_1_1 {
         klabel "from_1_1"
      }
      kport from_0_2 {
         klabel "from_0_2"
      }
      kport ni {
         klabel "ni"
      }
      // translation from long to short hierarchy - horizontal
      kedge ( :ni -> vtile_5:router)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_0_0 -> vtile_router0:from_1_0)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_1_1 -> vtile_router6:from_0_1)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_0_0 -> vtile_router0:from_0_1)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_0_2 -> vtile_router10:from_1_2)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_0_2 -> vtile_router10:from_0_1)
   }
   // for tile_router6
   knode vtile_router6 {
      klabel "tile_router6"
      kport to_1_0 {
         klabel "to_1_0"
      }
      kport to_0_1 {
         klabel "to_0_1"
      }
      kport from_1_0 {
         klabel "from_1_0"
      }
      kport from_0_1 {
         klabel "from_0_1"
      }
      kport to_2_1 {
         klabel "to_2_1"
      }
      kport to_1_2 {
         klabel "to_1_2"
      }
      kport ni {
         klabel "ni"
      }
      kport from_2_1 {
         klabel "from_2_1"
      }
      kport from_1_2 {
         klabel "from_1_2"
      }
      // translation from long to short hierarchy - horizontal
      kedge ( :to_1_0 -> vtile_router1)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_0_1 -> vtile_router5:from_1_1)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_2_1 -> vtile_router7:from_1_1)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_1_0 -> vtile_router1:from_1_1)
      // translation from long to short hierarchy - horizontal
      kedge ( :ni -> vtile_6:router)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_1_2 -> vtile_router11:from_1_1)
   }
   // for tile_router3
   knode vtile_router3 {
      klabel "tile_router3"
      kport from_4_0 {
         klabel "from_4_0"
      }
      kport from_3_1 {
         klabel "from_3_1"
      }
      kport to_2_0 {
         klabel "to_2_0"
      }
      kport from_2_0 {
         klabel "from_2_0"
      }
      kport ni {
         klabel "ni"
      }
      kport to_4_0 {
         klabel "to_4_0"
      }
      kport to_3_1 {
         klabel "to_3_1"
      }
      // translation from long to short hierarchy - horizontal
      kedge ( :ni -> vtile_3:router)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_3_1 -> vtile_router8:from_3_0)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_2_0 -> vtile_router2:from_3_0)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_4_0 -> vtile_router4:from_3_0)
   }
   // for tile_router4
   knode vtile_router4 {
      klabel "tile_router4"
      kport from_4_1 {
         klabel "from_4_1"
      }
      kport to_4_1 {
         klabel "to_4_1"
      }
      kport to_3_0 {
         klabel "to_3_0"
      }
      kport ni {
         klabel "ni"
      }
      kport from_3_0 {
         klabel "from_3_0"
      }
      // translation from long to short hierarchy - horizontal
      kedge ( :ni -> vtile_4:router)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_4_1 -> vtile_router9:from_4_0)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_3_0 -> vtile_router3:from_4_0)
   }
   // for tile_11
   knode vtile_11 {
      klabel "tile_11"
      // for tile_mem11
      knode vtile_mem11 {
         klabel "tile_mem11"
         kport networkInterface {
            klabel "networkInterface"
         }
         kport instructionsAndData {
            klabel "instructionsAndData"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :networkInterface -> vtile_ni11:tileMemory)
         // translation from long to short hierarchy - horizontal
         kedge ( :instructionsAndData -> vtile_cpu_11:defaultMemory)
      }
      // for tile_cpu_11
      knode vtile_cpu_11 {
         klabel "tile_cpu_11"
         kport networkInterface {
            klabel "networkInterface"
         }
         kport defaultMemory {
            klabel "defaultMemory"
         }
         // for tile_os11
         knode vtile_os11 {
            klabel "tile_os11"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :defaultMemory -> vtile_mem11:instructionsAndData)
         // translation from long to short hierarchy - horizontal
         kedge ( :networkInterface -> vtile_ni11:tileProcessor)
      }
      // for tile_ni11
      knode vtile_ni11 {
         klabel "tile_ni11"
         kport router {
            klabel "router"
         }
         kport tileProcessor {
            klabel "tileProcessor"
         }
         kport tileMemory {
            klabel "tileMemory"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :tileMemory -> vtile_mem11:networkInterface)
         // translation from long to short hierarchy - upwards
         kedge ( :router -> vtile_11:router)
         // translation from long to short hierarchy - horizontal
         kedge ( :tileProcessor -> vtile_cpu_11:networkInterface)
      }
      // port created by long-to-short translation - upwards
      kport router {
      }
      // translation from long to short hierarchy - horizontal
      kedge ( :router -> vtile_router11:ni)
      // translation from long to short hierarchy - backwards
      kedge ( :router -> vtile_ni11:router)
   }
   // for tile_router9
   knode vtile_router9 {
      klabel "tile_router9"
      kport from_4_0 {
         klabel "from_4_0"
      }
      kport from_3_1 {
         klabel "from_3_1"
      }
      kport from_4_2 {
         klabel "from_4_2"
      }
      kport to_4_2 {
         klabel "to_4_2"
      }
      kport ni {
         klabel "ni"
      }
      kport to_4_0 {
         klabel "to_4_0"
      }
      kport to_3_1 {
         klabel "to_3_1"
      }
      // translation from long to short hierarchy - horizontal
      kedge ( :to_4_2 -> vtile_router14:from_4_1)
      // translation from long to short hierarchy - horizontal
      kedge ( :ni -> vtile_9:router)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_3_1 -> vtile_router8:from_4_1)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_4_0 -> vtile_router4:from_4_1)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_4_0 -> vtile_router4)
   }
   // for tile_12
   knode vtile_12 {
      klabel "tile_12"
      // for tile_ni12
      knode vtile_ni12 {
         klabel "tile_ni12"
         kport router {
            klabel "router"
         }
         kport tileProcessor {
            klabel "tileProcessor"
         }
         kport tileMemory {
            klabel "tileMemory"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :tileProcessor -> vtile_cpu_12:networkInterface)
         // translation from long to short hierarchy - upwards
         kedge ( :router -> vtile_12:router)
         // translation from long to short hierarchy - horizontal
         kedge ( :tileMemory -> vtile_mem12:networkInterface)
      }
      // for tile_mem12
      knode vtile_mem12 {
         klabel "tile_mem12"
         kport networkInterface {
            klabel "networkInterface"
         }
         kport instructionsAndData {
            klabel "instructionsAndData"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :networkInterface -> vtile_ni12:tileMemory)
         // translation from long to short hierarchy - horizontal
         kedge ( :instructionsAndData -> vtile_cpu_12:defaultMemory)
      }
      // for tile_cpu_12
      knode vtile_cpu_12 {
         klabel "tile_cpu_12"
         kport networkInterface {
            klabel "networkInterface"
         }
         kport defaultMemory {
            klabel "defaultMemory"
         }
         // for tile_os12
         knode vtile_os12 {
            klabel "tile_os12"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :defaultMemory -> vtile_mem12:instructionsAndData)
         // translation from long to short hierarchy - horizontal
         kedge ( :networkInterface -> vtile_ni12:tileProcessor)
      }
      // port created by long-to-short translation - backwards
      kport router {
      }
      // translation from long to short hierarchy - backwards
      kedge ( :router -> vtile_ni12:router)
      // translation from long to short hierarchy - horizontal
      kedge ( :router -> vtile_router12:ni)
   }
   // for tile_13
   knode vtile_13 {
      klabel "tile_13"
      // for tile_ni13
      knode vtile_ni13 {
         klabel "tile_ni13"
         kport router {
            klabel "router"
         }
         kport tileProcessor {
            klabel "tileProcessor"
         }
         kport tileMemory {
            klabel "tileMemory"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :tileProcessor -> vtile_cpu_13:networkInterface)
         // translation from long to short hierarchy - horizontal
         kedge ( :tileMemory -> vtile_mem13:networkInterface)
         // translation from long to short hierarchy - upwards
         kedge ( :router -> vtile_13:router)
      }
      // for tile_mem13
      knode vtile_mem13 {
         klabel "tile_mem13"
         kport networkInterface {
            klabel "networkInterface"
         }
         kport instructionsAndData {
            klabel "instructionsAndData"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :instructionsAndData -> vtile_cpu_13:defaultMemory)
         // translation from long to short hierarchy - horizontal
         kedge ( :networkInterface -> vtile_ni13:tileMemory)
      }
      // for tile_cpu_13
      knode vtile_cpu_13 {
         klabel "tile_cpu_13"
         kport networkInterface {
            klabel "networkInterface"
         }
         kport defaultMemory {
            klabel "defaultMemory"
         }
         // for tile_os13
         knode vtile_os13 {
            klabel "tile_os13"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :networkInterface -> vtile_ni13:tileProcessor)
         // translation from long to short hierarchy - horizontal
         kedge ( :defaultMemory -> vtile_mem13:instructionsAndData)
      }
      // port created by long-to-short translation - upwards
      kport router {
      }
      // translation from long to short hierarchy - horizontal
      kedge ( :router -> vtile_router13:ni)
      // translation from long to short hierarchy - backwards
      kedge ( :router -> vtile_ni13:router)
   }
   // for tile_router7
   knode vtile_router7 {
      klabel "tile_router7"
      kport from_3_1 {
         klabel "from_3_1"
      }
      kport from_2_2 {
         klabel "from_2_2"
      }
      kport to_2_0 {
         klabel "to_2_0"
      }
      kport to_1_1 {
         klabel "to_1_1"
      }
      kport from_2_0 {
         klabel "from_2_0"
      }
      kport from_1_1 {
         klabel "from_1_1"
      }
      kport ni {
         klabel "ni"
      }
      kport to_3_1 {
         klabel "to_3_1"
      }
      kport to_2_2 {
         klabel "to_2_2"
      }
      // translation from long to short hierarchy - horizontal
      kedge ( :to_1_1 -> vtile_router6:from_2_1)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_3_1 -> vtile_router8:from_2_1)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_2_0 -> vtile_router2:from_2_1)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_2_0 -> vtile_router2:from_1_0)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_2_2 -> vtile_router12:from_2_1)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_2_2 -> vtile_router12:from_1_2)
      // translation from long to short hierarchy - horizontal
      kedge ( :ni -> vtile_7:router)
   }
   // for tile_14
   knode vtile_14 {
      klabel "tile_14"
      // for tile_ni14
      knode vtile_ni14 {
         klabel "tile_ni14"
         kport router {
            klabel "router"
         }
         kport tileProcessor {
            klabel "tileProcessor"
         }
         kport tileMemory {
            klabel "tileMemory"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :tileMemory -> vtile_mem14:networkInterface)
         // translation from long to short hierarchy - horizontal
         kedge ( :tileProcessor -> vtile_cpu_14:networkInterface)
         // translation from long to short hierarchy - upwards
         kedge ( :router -> vtile_14:router)
      }
      // for tile_cpu_14
      knode vtile_cpu_14 {
         klabel "tile_cpu_14"
         kport networkInterface {
            klabel "networkInterface"
         }
         kport defaultMemory {
            klabel "defaultMemory"
         }
         // for tile_os14
         knode vtile_os14 {
            klabel "tile_os14"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :defaultMemory -> vtile_mem14:instructionsAndData)
         // translation from long to short hierarchy - horizontal
         kedge ( :networkInterface -> vtile_ni14:tileProcessor)
      }
      // for tile_mem14
      knode vtile_mem14 {
         klabel "tile_mem14"
         kport networkInterface {
            klabel "networkInterface"
         }
         kport instructionsAndData {
            klabel "instructionsAndData"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :instructionsAndData -> vtile_cpu_14:defaultMemory)
         // translation from long to short hierarchy - horizontal
         kedge ( :networkInterface -> vtile_ni14:tileMemory)
      }
      // port created by long-to-short translation - backwards
      kport router {
      }
      // translation from long to short hierarchy - backwards
      kedge ( :router -> vtile_ni14:router)
      // translation from long to short hierarchy - horizontal
      kedge ( :router -> vtile_router14:ni)
   }
   // for tile_router8
   knode vtile_router8 {
      klabel "tile_router8"
      kport from_4_1 {
         klabel "from_4_1"
      }
      kport from_3_2 {
         klabel "from_3_2"
      }
      kport to_4_1 {
         klabel "to_4_1"
      }
      kport to_3_2 {
         klabel "to_3_2"
      }
      kport to_3_0 {
         klabel "to_3_0"
      }
      kport to_2_1 {
         klabel "to_2_1"
      }
      kport ni {
         klabel "ni"
      }
      kport from_3_0 {
         klabel "from_3_0"
      }
      kport from_2_1 {
         klabel "from_2_1"
      }
      // translation from long to short hierarchy - horizontal
      kedge ( :to_4_1 -> vtile_router9:from_3_1)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_3_0 -> vtile_router3:from_3_1)
      // translation from long to short hierarchy - horizontal
      kedge ( :ni -> vtile_8:router)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_3_2 -> vtile_router13:from_3_1)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_3_0 -> vtile_router3)
      // translation from long to short hierarchy - horizontal
      kedge ( :to_2_1 -> vtile_router7:from_3_1)
   }
   // for tile_10
   knode vtile_10 {
      klabel "tile_10"
      // for tile_mem10
      knode vtile_mem10 {
         klabel "tile_mem10"
         kport networkInterface {
            klabel "networkInterface"
         }
         kport instructionsAndData {
            klabel "instructionsAndData"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :instructionsAndData -> vtile_cpu_10:defaultMemory)
         // translation from long to short hierarchy - horizontal
         kedge ( :networkInterface -> vtile_ni10:tileMemory)
      }
      // for tile_cpu_10
      knode vtile_cpu_10 {
         klabel "tile_cpu_10"
         kport networkInterface {
            klabel "networkInterface"
         }
         kport defaultMemory {
            klabel "defaultMemory"
         }
         // for tile_os10
         knode vtile_os10 {
            klabel "tile_os10"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :defaultMemory -> vtile_mem10:instructionsAndData)
         // translation from long to short hierarchy - horizontal
         kedge ( :networkInterface -> vtile_ni10:tileProcessor)
      }
      // for tile_ni10
      knode vtile_ni10 {
         klabel "tile_ni10"
         kport router {
            klabel "router"
         }
         kport tileProcessor {
            klabel "tileProcessor"
         }
         kport tileMemory {
            klabel "tileMemory"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :tileMemory -> vtile_mem10:networkInterface)
         // translation from long to short hierarchy - horizontal
         kedge ( :tileProcessor -> vtile_cpu_10:networkInterface)
         // translation from long to short hierarchy - upwards
         kedge ( :router -> vtile_10:router)
      }
      // port created by long-to-short translation - backwards
      kport router {
      }
      // translation from long to short hierarchy - backwards
      kedge ( :router -> vtile_ni10:router)
      // translation from long to short hierarchy - horizontal
      kedge ( :router -> vtile_router10:ni)
   }
   // for tile_6
   knode vtile_6 {
      klabel "tile_6"
      // for tile_mem6
      knode vtile_mem6 {
         klabel "tile_mem6"
         kport networkInterface {
            klabel "networkInterface"
         }
         kport instructionsAndData {
            klabel "instructionsAndData"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :networkInterface -> vtile_ni6:tileMemory)
         // translation from long to short hierarchy - horizontal
         kedge ( :instructionsAndData -> vtile_cpu_6:defaultMemory)
      }
      // for tile_ni6
      knode vtile_ni6 {
         klabel "tile_ni6"
         kport router {
            klabel "router"
         }
         kport tileProcessor {
            klabel "tileProcessor"
         }
         kport tileMemory {
            klabel "tileMemory"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :tileProcessor -> vtile_cpu_6:networkInterface)
         // translation from long to short hierarchy - upwards
         kedge ( :router -> vtile_6:router)
         // translation from long to short hierarchy - horizontal
         kedge ( :tileMemory -> vtile_mem6:networkInterface)
      }
      // for tile_cpu_6
      knode vtile_cpu_6 {
         klabel "tile_cpu_6"
         kport networkInterface {
            klabel "networkInterface"
         }
         kport defaultMemory {
            klabel "defaultMemory"
         }
         // for tile_os6
         knode vtile_os6 {
            klabel "tile_os6"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :defaultMemory -> vtile_mem6:instructionsAndData)
         // translation from long to short hierarchy - horizontal
         kedge ( :networkInterface -> vtile_ni6:tileProcessor)
      }
      // port created by long-to-short translation - upwards
      kport router {
      }
      // translation from long to short hierarchy - horizontal
      kedge ( :router -> vtile_router6:ni)
      // translation from long to short hierarchy - backwards
      kedge ( :router -> vtile_ni6:router)
   }
   // for tile_7
   knode vtile_7 {
      klabel "tile_7"
      // for tile_ni7
      knode vtile_ni7 {
         klabel "tile_ni7"
         kport router {
            klabel "router"
         }
         kport tileProcessor {
            klabel "tileProcessor"
         }
         kport tileMemory {
            klabel "tileMemory"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :tileMemory -> vtile_mem7:networkInterface)
         // translation from long to short hierarchy - horizontal
         kedge ( :tileProcessor -> vtile_cpu_7:networkInterface)
         // translation from long to short hierarchy - upwards
         kedge ( :router -> vtile_7:router)
      }
      // for tile_mem7
      knode vtile_mem7 {
         klabel "tile_mem7"
         kport networkInterface {
            klabel "networkInterface"
         }
         kport instructionsAndData {
            klabel "instructionsAndData"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :instructionsAndData -> vtile_cpu_7:defaultMemory)
         // translation from long to short hierarchy - horizontal
         kedge ( :networkInterface -> vtile_ni7:tileMemory)
      }
      // for tile_cpu_7
      knode vtile_cpu_7 {
         klabel "tile_cpu_7"
         kport networkInterface {
            klabel "networkInterface"
         }
         kport defaultMemory {
            klabel "defaultMemory"
         }
         // for tile_os7
         knode vtile_os7 {
            klabel "tile_os7"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :networkInterface -> vtile_ni7:tileProcessor)
         // translation from long to short hierarchy - horizontal
         kedge ( :defaultMemory -> vtile_mem7:instructionsAndData)
      }
      // port created by long-to-short translation - upwards
      kport router {
      }
      // translation from long to short hierarchy - horizontal
      kedge ( :router -> vtile_router7:ni)
      // translation from long to short hierarchy - backwards
      kedge ( :router -> vtile_ni7:router)
   }
   // for tile_8
   knode vtile_8 {
      klabel "tile_8"
      // for tile_ni8
      knode vtile_ni8 {
         klabel "tile_ni8"
         kport router {
            klabel "router"
         }
         kport tileProcessor {
            klabel "tileProcessor"
         }
         kport tileMemory {
            klabel "tileMemory"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :tileProcessor -> vtile_cpu_8:networkInterface)
         // translation from long to short hierarchy - upwards
         kedge ( :router -> vtile_8:router)
         // translation from long to short hierarchy - horizontal
         kedge ( :tileMemory -> vtile_mem8:networkInterface)
      }
      // for tile_mem8
      knode vtile_mem8 {
         klabel "tile_mem8"
         kport networkInterface {
            klabel "networkInterface"
         }
         kport instructionsAndData {
            klabel "instructionsAndData"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :instructionsAndData -> vtile_cpu_8:defaultMemory)
         // translation from long to short hierarchy - horizontal
         kedge ( :networkInterface -> vtile_ni8:tileMemory)
      }
      // for tile_cpu_8
      knode vtile_cpu_8 {
         klabel "tile_cpu_8"
         kport networkInterface {
            klabel "networkInterface"
         }
         kport defaultMemory {
            klabel "defaultMemory"
         }
         // for tile_os8
         knode vtile_os8 {
            klabel "tile_os8"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :networkInterface -> vtile_ni8:tileProcessor)
         // translation from long to short hierarchy - horizontal
         kedge ( :defaultMemory -> vtile_mem8:instructionsAndData)
      }
      // port created by long-to-short translation - upwards
      kport router {
      }
      // translation from long to short hierarchy - horizontal
      kedge ( :router -> vtile_router8:ni)
      // translation from long to short hierarchy - backwards
      kedge ( :router -> vtile_ni8:router)
   }
   // for tile_9
   knode vtile_9 {
      klabel "tile_9"
      // for tile_cpu_9
      knode vtile_cpu_9 {
         klabel "tile_cpu_9"
         kport networkInterface {
            klabel "networkInterface"
         }
         kport defaultMemory {
            klabel "defaultMemory"
         }
         // for tile_os9
         knode vtile_os9 {
            klabel "tile_os9"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :defaultMemory -> vtile_mem9:instructionsAndData)
         // translation from long to short hierarchy - horizontal
         kedge ( :networkInterface -> vtile_ni9:tileProcessor)
      }
      // for tile_mem9
      knode vtile_mem9 {
         klabel "tile_mem9"
         kport networkInterface {
            klabel "networkInterface"
         }
         kport instructionsAndData {
            klabel "instructionsAndData"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :instructionsAndData -> vtile_cpu_9:defaultMemory)
         // translation from long to short hierarchy - horizontal
         kedge ( :networkInterface -> vtile_ni9:tileMemory)
      }
      // for tile_ni9
      knode vtile_ni9 {
         klabel "tile_ni9"
         kport router {
            klabel "router"
         }
         kport tileProcessor {
            klabel "tileProcessor"
         }
         kport tileMemory {
            klabel "tileMemory"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :tileProcessor -> vtile_cpu_9:networkInterface)
         // translation from long to short hierarchy - upwards
         kedge ( :router -> vtile_9:router)
         // translation from long to short hierarchy - horizontal
         kedge ( :tileMemory -> vtile_mem9:networkInterface)
      }
      // port created by long-to-short translation - upwards
      kport router {
      }
      // translation from long to short hierarchy - horizontal
      kedge ( :router -> vtile_router9:ni)
      // translation from long to short hierarchy - backwards
      kedge ( :router -> vtile_ni9:router)
   }
   // for tile_0
   knode vtile_0 {
      klabel "tile_0"
      // for tile_cpu_0
      knode vtile_cpu_0 {
         klabel "tile_cpu_0"
         kport networkInterface {
            klabel "networkInterface"
         }
         kport defaultMemory {
            klabel "defaultMemory"
         }
         // for tile_os0
         knode vtile_os0 {
            klabel "tile_os0"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :networkInterface -> vtile_ni0:tileProcessor)
         // translation from long to short hierarchy - horizontal
         kedge ( :defaultMemory -> vtile_mem0:instructionsAndData)
      }
      // for tile_ni0
      knode vtile_ni0 {
         klabel "tile_ni0"
         kport router {
            klabel "router"
         }
         kport tileProcessor {
            klabel "tileProcessor"
         }
         kport tileMemory {
            klabel "tileMemory"
         }
         // translation from long to short hierarchy - upwards
         kedge ( :router -> vtile_0:router)
         // translation from long to short hierarchy - horizontal
         kedge ( :tileProcessor -> vtile_cpu_0:networkInterface)
         // translation from long to short hierarchy - horizontal
         kedge ( :tileMemory -> vtile_mem0:networkInterface)
      }
      // for tile_mem0
      knode vtile_mem0 {
         klabel "tile_mem0"
         kport networkInterface {
            klabel "networkInterface"
         }
         kport instructionsAndData {
            klabel "instructionsAndData"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :networkInterface -> vtile_ni0:tileMemory)
         // translation from long to short hierarchy - horizontal
         kedge ( :instructionsAndData -> vtile_cpu_0:defaultMemory)
      }
      // port created by long-to-short translation - backwards
      kport router {
      }
      // translation from long to short hierarchy - backwards
      kedge ( :router -> vtile_ni0:router)
      // translation from long to short hierarchy - horizontal
      kedge ( :router -> vtile_router0:ni)
   }
   // for tile_1
   knode vtile_1 {
      klabel "tile_1"
      // for tile_cpu_1
      knode vtile_cpu_1 {
         klabel "tile_cpu_1"
         kport networkInterface {
            klabel "networkInterface"
         }
         kport defaultMemory {
            klabel "defaultMemory"
         }
         // for tile_os1
         knode vtile_os1 {
            klabel "tile_os1"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :defaultMemory -> vtile_mem1:instructionsAndData)
         // translation from long to short hierarchy - horizontal
         kedge ( :networkInterface -> vtile_ni1:tileProcessor)
      }
      // for tile_mem1
      knode vtile_mem1 {
         klabel "tile_mem1"
         kport networkInterface {
            klabel "networkInterface"
         }
         kport instructionsAndData {
            klabel "instructionsAndData"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :networkInterface -> vtile_ni1:tileMemory)
         // translation from long to short hierarchy - horizontal
         kedge ( :instructionsAndData -> vtile_cpu_1:defaultMemory)
      }
      // for tile_ni1
      knode vtile_ni1 {
         klabel "tile_ni1"
         kport router {
            klabel "router"
         }
         kport tileProcessor {
            klabel "tileProcessor"
         }
         kport tileMemory {
            klabel "tileMemory"
         }
         // translation from long to short hierarchy - upwards
         kedge ( :router -> vtile_1:router)
         // translation from long to short hierarchy - horizontal
         kedge ( :tileProcessor -> vtile_cpu_1:networkInterface)
         // translation from long to short hierarchy - horizontal
         kedge ( :tileMemory -> vtile_mem1:networkInterface)
      }
      // port created by long-to-short translation - backwards
      kport router {
      }
      // translation from long to short hierarchy - backwards
      kedge ( :router -> vtile_ni1:router)
      // translation from long to short hierarchy - horizontal
      kedge ( :router -> vtile_router1:ni)
   }
   // for tile_2
   knode vtile_2 {
      klabel "tile_2"
      // for tile_cpu_2
      knode vtile_cpu_2 {
         klabel "tile_cpu_2"
         kport networkInterface {
            klabel "networkInterface"
         }
         kport defaultMemory {
            klabel "defaultMemory"
         }
         // for tile_os2
         knode vtile_os2 {
            klabel "tile_os2"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :defaultMemory -> vtile_mem2:instructionsAndData)
         // translation from long to short hierarchy - horizontal
         kedge ( :networkInterface -> vtile_ni2:tileProcessor)
      }
      // for tile_mem2
      knode vtile_mem2 {
         klabel "tile_mem2"
         kport networkInterface {
            klabel "networkInterface"
         }
         kport instructionsAndData {
            klabel "instructionsAndData"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :networkInterface -> vtile_ni2:tileMemory)
         // translation from long to short hierarchy - horizontal
         kedge ( :instructionsAndData -> vtile_cpu_2:defaultMemory)
      }
      // for tile_ni2
      knode vtile_ni2 {
         klabel "tile_ni2"
         kport router {
            klabel "router"
         }
         kport tileProcessor {
            klabel "tileProcessor"
         }
         kport tileMemory {
            klabel "tileMemory"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :tileMemory -> vtile_mem2:networkInterface)
         // translation from long to short hierarchy - upwards
         kedge ( :router -> vtile_2:router)
         // translation from long to short hierarchy - horizontal
         kedge ( :tileProcessor -> vtile_cpu_2:networkInterface)
      }
      // port created by long-to-short translation - backwards
      kport router {
      }
      // translation from long to short hierarchy - backwards
      kedge ( :router -> vtile_ni2:router)
      // translation from long to short hierarchy - horizontal
      kedge ( :router -> vtile_router2:ni)
   }
   // for tile_3
   knode vtile_3 {
      klabel "tile_3"
      // for tile_ni3
      knode vtile_ni3 {
         klabel "tile_ni3"
         kport router {
            klabel "router"
         }
         kport tileProcessor {
            klabel "tileProcessor"
         }
         kport tileMemory {
            klabel "tileMemory"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :tileMemory -> vtile_mem3:networkInterface)
         // translation from long to short hierarchy - upwards
         kedge ( :router -> vtile_3:router)
         // translation from long to short hierarchy - horizontal
         kedge ( :tileProcessor -> vtile_cpu_3:networkInterface)
      }
      // for tile_mem3
      knode vtile_mem3 {
         klabel "tile_mem3"
         kport networkInterface {
            klabel "networkInterface"
         }
         kport instructionsAndData {
            klabel "instructionsAndData"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :networkInterface -> vtile_ni3:tileMemory)
         // translation from long to short hierarchy - horizontal
         kedge ( :instructionsAndData -> vtile_cpu_3:defaultMemory)
      }
      // for tile_cpu_3
      knode vtile_cpu_3 {
         klabel "tile_cpu_3"
         kport networkInterface {
            klabel "networkInterface"
         }
         kport defaultMemory {
            klabel "defaultMemory"
         }
         // for tile_os3
         knode vtile_os3 {
            klabel "tile_os3"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :networkInterface -> vtile_ni3:tileProcessor)
         // translation from long to short hierarchy - horizontal
         kedge ( :defaultMemory -> vtile_mem3:instructionsAndData)
      }
      // port created by long-to-short translation - backwards
      kport router {
      }
      // translation from long to short hierarchy - backwards
      kedge ( :router -> vtile_ni3:router)
      // translation from long to short hierarchy - horizontal
      kedge ( :router -> vtile_router3:ni)
   }
   // for tile_4
   knode vtile_4 {
      klabel "tile_4"
      // for tile_ni4
      knode vtile_ni4 {
         klabel "tile_ni4"
         kport router {
            klabel "router"
         }
         kport tileProcessor {
            klabel "tileProcessor"
         }
         kport tileMemory {
            klabel "tileMemory"
         }
         // translation from long to short hierarchy - upwards
         kedge ( :router -> vtile_4:router)
         // translation from long to short hierarchy - horizontal
         kedge ( :tileProcessor -> vtile_cpu_4:networkInterface)
         // translation from long to short hierarchy - horizontal
         kedge ( :tileMemory -> vtile_mem4:networkInterface)
      }
      // for tile_mem4
      knode vtile_mem4 {
         klabel "tile_mem4"
         kport networkInterface {
            klabel "networkInterface"
         }
         kport instructionsAndData {
            klabel "instructionsAndData"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :networkInterface -> vtile_ni4:tileMemory)
         // translation from long to short hierarchy - horizontal
         kedge ( :instructionsAndData -> vtile_cpu_4:defaultMemory)
      }
      // for tile_cpu_4
      knode vtile_cpu_4 {
         klabel "tile_cpu_4"
         kport networkInterface {
            klabel "networkInterface"
         }
         kport defaultMemory {
            klabel "defaultMemory"
         }
         // for tile_os4
         knode vtile_os4 {
            klabel "tile_os4"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :networkInterface -> vtile_ni4:tileProcessor)
         // translation from long to short hierarchy - horizontal
         kedge ( :defaultMemory -> vtile_mem4:instructionsAndData)
      }
      // port created by long-to-short translation - backwards
      kport router {
      }
      // translation from long to short hierarchy - backwards
      kedge ( :router -> vtile_ni4:router)
      // translation from long to short hierarchy - horizontal
      kedge ( :router -> vtile_router4:ni)
   }
   // for tile_5
   knode vtile_5 {
      klabel "tile_5"
      // for tile_mem5
      knode vtile_mem5 {
         klabel "tile_mem5"
         kport networkInterface {
            klabel "networkInterface"
         }
         kport instructionsAndData {
            klabel "instructionsAndData"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :networkInterface -> vtile_ni5:tileMemory)
         // translation from long to short hierarchy - horizontal
         kedge ( :instructionsAndData -> vtile_cpu_5:defaultMemory)
      }
      // for tile_ni5
      knode vtile_ni5 {
         klabel "tile_ni5"
         kport router {
            klabel "router"
         }
         kport tileProcessor {
            klabel "tileProcessor"
         }
         kport tileMemory {
            klabel "tileMemory"
         }
         // translation from long to short hierarchy - upwards
         kedge ( :router -> vtile_5:router)
         // translation from long to short hierarchy - horizontal
         kedge ( :tileProcessor -> vtile_cpu_5:networkInterface)
         // translation from long to short hierarchy - horizontal
         kedge ( :tileMemory -> vtile_mem5:networkInterface)
      }
      // for tile_cpu_5
      knode vtile_cpu_5 {
         klabel "tile_cpu_5"
         kport networkInterface {
            klabel "networkInterface"
         }
         kport defaultMemory {
            klabel "defaultMemory"
         }
         // for tile_os5
         knode vtile_os5 {
            klabel "tile_os5"
         }
         // translation from long to short hierarchy - horizontal
         kedge ( :defaultMemory -> vtile_mem5:instructionsAndData)
         // translation from long to short hierarchy - horizontal
         kedge ( :networkInterface -> vtile_ni5:tileProcessor)
      }
      // port created by long-to-short translation - backwards
      kport router {
      }
      // translation from long to short hierarchy - backwards
      kedge ( :router -> vtile_ni5:router)
      // translation from long to short hierarchy - horizontal
      kedge ( :router -> vtile_router5:ni)
   }
}
