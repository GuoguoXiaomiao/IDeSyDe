#!/usr/bin/env swipl

:- module('desyder-logical-cli', []).
% :- use_module('main.pro').
:- use_module('lib/sdf/queries.pro').
:- use_module('lib/types.pro').
 
:- initialization(main, main).

main(Argv) :- 
  main_process_entry(Argv).

main_process_entry([Model|Rest]) :-
  write(Model), nl,
  open(Model, read, ModelStream, []),
  main_read_model(ModelStream),
  close(ModelStream),
  main_process_args(Rest).

main_process_args(['sdf_actors'|Rest]) :-
  findall(X, sdf_actor(X), L),
  write('asd'),
  write(L),
  main_process_args(Rest).

main_process_args([]).

main_read_model(ModelStream) :-
  at_end_of_stream(ModelStream),
  !.

main_read_model(ModelStream) :-
  read_term(ModelStream, T, []),
  assertz(T),
  main_read_model(ModelStream).

 
% main_input_model([Arg, Val | _], Model) :- 
%   Arg = '-db',
%   Val = Model.
% main_input_model([_, _ | Rest], Model) :- 
%   main_input_model(Rest, Model).
% main_input_model([], Model) :- Model = 'model.pro'.
% 
% main_query([Arg, Val | _], Term) :- 
%   Arg = '-q',
%   read_term_from_atom(Val, Term, []).
% main_query([_, _ | Rest], Term) :-
%   main_query(Rest, Term).
